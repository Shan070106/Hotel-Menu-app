{"ast":null,"code":"var _jsxFileName = \"/home/shanmugam/Documents/projects/Hotel-Menu-app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MenuPage from './components/menu folder/MenuPage.js';\nimport FoodDetailPage from './components/foodDetails/FoodDetailPage.js';\nimport OrderPage from './components/order folder/OrderPage.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentPage, setCurrentPage] = useState('menu');\n  const [selectedFoodId, setSelectedFoodId] = useState(null);\n  const [orderItems, setOrderItems] = useState([]);\n  const handleFoodClick = foodId => {\n    setSelectedFoodId(foodId);\n    setCurrentPage('detail');\n  };\n  const handleBackToMenu = () => {\n    setCurrentPage('menu');\n    setSelectedFoodId(null);\n  };\n  const handleAddToOrder = food => {\n    // Check if item already exists in order\n    const existingItemIndex = orderItems.findIndex(item => item.id === food.id);\n    if (existingItemIndex >= 0) {\n      // If item exists, increment quantity\n      setOrderItems(prev => prev.map((item, index) => index === existingItemIndex ? {\n        ...item,\n        quantity: item.quantity + 1\n      } : item));\n    } else {\n      // If item doesn't exist, add it with quantity 1\n      setOrderItems(prev => [...prev, {\n        ...food,\n        quantity: 1\n      }]);\n    }\n  };\n  const handleConfirmOrder = () => {\n    if (orderItems.length === 0) {\n      alert('No items in order!');\n      return;\n    }\n    setCurrentPage('order');\n  };\n  const handleBackFromOrder = () => {\n    setCurrentPage('menu');\n  };\n  const handleClearOrder = () => {\n    setOrderItems([]);\n  };\n  if (currentPage === 'detail') {\n    return /*#__PURE__*/_jsxDEV(FoodDetailPage, {\n      foodId: selectedFoodId,\n      onBack: handleBackToMenu,\n      onAddToOrder: handleAddToOrder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n  if (currentPage === 'order') {\n    return /*#__PURE__*/_jsxDEV(OrderPage, {\n      orderItems: orderItems,\n      onBack: handleBackFromOrder,\n      onClearOrder: handleClearOrder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(MenuPage, {\n    onFoodClick: handleFoodClick,\n    onConfirmOrder: handleConfirmOrder,\n    onAddToOrder: handleAddToOrder,\n    orderItems: orderItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3o/I0+DLAx37DoSxhWSSXvLEzNo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MenuPage","FoodDetailPage","OrderPage","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","selectedFoodId","setSelectedFoodId","orderItems","setOrderItems","handleFoodClick","foodId","handleBackToMenu","handleAddToOrder","food","existingItemIndex","findIndex","item","id","prev","map","index","quantity","handleConfirmOrder","length","alert","handleBackFromOrder","handleClearOrder","onBack","onAddToOrder","fileName","_jsxFileName","lineNumber","columnNumber","onClearOrder","onFoodClick","onConfirmOrder","_c","$RefreshReg$"],"sources":["/home/shanmugam/Documents/projects/Hotel-Menu-app/frontend/src/App.js"],"sourcesContent":["import React,{useState} from 'react';\nimport MenuPage from './components/menu folder/MenuPage.js';\nimport FoodDetailPage from './components/foodDetails/FoodDetailPage.js';\nimport OrderPage from './components/order folder/OrderPage.js';\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState('menu');\n  const [selectedFoodId, setSelectedFoodId] = useState(null);\n  const [orderItems, setOrderItems] = useState([]);\n\n  const handleFoodClick = (foodId) => {\n    setSelectedFoodId(foodId);\n    setCurrentPage('detail');\n  };\n\n  const handleBackToMenu = () => {\n    setCurrentPage('menu');\n    setSelectedFoodId(null);\n  };\n\n  const handleAddToOrder = (food) => {\n    // Check if item already exists in order\n    const existingItemIndex = orderItems.findIndex(item => item.id === food.id);\n    \n    if (existingItemIndex >= 0) {\n      // If item exists, increment quantity\n      setOrderItems(prev => prev.map((item, index) => \n        index === existingItemIndex \n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      // If item doesn't exist, add it with quantity 1\n      setOrderItems(prev => [...prev, { ...food, quantity: 1 }]);\n    }\n  };\n\n  const handleConfirmOrder = () => {\n    if (orderItems.length === 0) {\n      alert('No items in order!');\n      return;\n    }\n    setCurrentPage('order');\n  };\n\n  const handleBackFromOrder = () => {\n    setCurrentPage('menu');\n  };\n\n  const handleClearOrder = () => {\n    setOrderItems([]);\n  };\n\n  if (currentPage === 'detail') {\n    return (\n      <FoodDetailPage \n        foodId={selectedFoodId} \n        onBack={handleBackToMenu}\n        onAddToOrder={handleAddToOrder}\n      />\n    );\n  }\n\n  if (currentPage === 'order') {\n    return (\n      <OrderPage \n        orderItems={orderItems}\n        onBack={handleBackFromOrder}\n        onClearOrder={handleClearOrder}\n      />\n    );\n  }\n\n  return (\n    <MenuPage \n      onFoodClick={handleFoodClick}\n      onConfirmOrder={handleConfirmOrder}\n      onAddToOrder={handleAddToOrder}\n      orderItems={orderItems}\n    />\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}